"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[4767],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(96540);const a={},i=r.createContext(a);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(i.Provider,{value:n},e.children)}},65240:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"system-architecture/use-case-sequences","title":"Use Case Sequences","description":"These are sequence diagrams that line up with the use cases, along with descriptions of how the system functions at each step.","source":"@site/docs/system-architecture/use-case-sequences.md","sourceDirName":"system-architecture","slug":"/system-architecture/use-case-sequences","permalink":"/aac-go-fish/docs/system-architecture/use-case-sequences","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Spring/aac-go-fish/edit/main/documentation/docs/system-architecture/use-case-sequences.md","tags":[],"version":"current","lastUpdatedBy":"Andriy Luchko","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Frontend Diagram","permalink":"/aac-go-fish/docs/system-architecture/case-diagram"},"next":{"title":"API Specification","permalink":"/aac-go-fish/docs/category/api-specification"}}');var a=s(74848),i=s(28453);const t={},o="Use Case Sequences",d={},c=[{value:"Use Case\u202f1 \u2013 Create Lobby",id:"use-case1--create-lobby",level:2},{value:"Use Case\u202f2 \u2013 Share Lobby via Link",id:"use-case2--share-lobby-via-link",level:2},{value:"Use Case\u202f3 \u2013 Share Lobby Code (Audio)",id:"use-case3--share-lobby-code-audio",level:2},{value:"Use Case\u202f4 \u2013 Join Lobby via Link",id:"use-case4--join-lobby-via-link",level:2},{value:"Use Case\u202f5 \u2013 Join Lobby via Manual Code Entry",id:"use-case5--join-lobby-via-manual-code-entry",level:2},{value:"Use Case\u202f6 \u2013 Start Game",id:"use-case6--start-game",level:2},{value:"Use Case\u202f7 \u2013 Walk through Joyride",id:"use-case7--walk-through-joyride",level:2},{value:"Use Case\u202f8 \u2013 Skip Joyride",id:"use-case8--skip-joyride",level:2},{value:"Use Case\u202f9 \u2013 Manager Receives Customer Order",id:"use-case9--manager-receives-customer-order",level:2},{value:"Use Case\u202f10 \u2013 Manager Relays Order with AAC",id:"use-case10--manager-relays-order-with-aac",level:2},{value:"Use Case\u202f11 \u2013 Employee Listens to Order",id:"use-case11--employee-listens-to-order",level:2},{value:"Use Case\u202f12 \u2013 Employee Requests Order Repeat",id:"use-case12--employee-requests-order-repeat",level:2},{value:"Use Case\u202f13 \u2013 Prepare Burger",id:"use-case13--prepare-burger",level:2},{value:"Use Case\u202f14 \u2013 Prepare Sides",id:"use-case14--prepare-sides",level:2},{value:"Use Case\u202f15 \u2013 Prepare Drinks",id:"use-case15--prepare-drinks",level:2},{value:"Use Case\u202f16 \u2013 Manager Serves Order",id:"use-case16--manager-serves-order",level:2},{value:"Use Case\u202f17 \u2013 Day Complete",id:"use-case17--day-complete",level:2},{value:"Use Case\u202f18 \u2013 Role Assignment for Next Day",id:"use-case18--role-assignment-for-next-day",level:2},{value:"Use Case\u202f19 \u2013 Game Complete",id:"use-case19--game-complete",level:2}];function l(e){const n={h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"use-case-sequences",children:"Use Case Sequences"})}),"\n",(0,a.jsx)(n.p,{children:"These are sequence diagrams that line up with the use cases, along with descriptions of how the system functions at each step."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case1--create-lobby",children:"Use Case\u202f1 \u2013 Create Lobby"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Frontend\n    participant Backend\n\n    User->>Frontend: open site\n    Frontend--\x3e>User: landing page\n    User->>Frontend: click Create Lobby\n    Frontend->>Backend: POST /lobby\n    Backend--\x3e>Frontend: returns lobby code (3 ingredients)\n    Frontend--\x3e>User: show lobby with code images"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Frontend makes a POST /lobby request."}),"\n",(0,a.jsx)(n.li,{children:"Backend returns a unique three ingredient code."}),"\n",(0,a.jsx)(n.li,{children:"Frontend shows the lobby screen with the code."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case2--share-lobby-via-link",children:"Use Case\u202f2 \u2013 Share Lobby via Link"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Frontend\n\n    User->>Frontend: click copy icon\n    Frontend--\x3e>User: URL copied confirmation"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"User clicks the copy icon."}),"\n",(0,a.jsx)(n.li,{children:"Frontend copies the lobby URL and shows a check mark."}),"\n",(0,a.jsx)(n.li,{children:"User pastes the link in an external chat."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case3--share-lobby-code-audio",children:"Use Case\u202f3 \u2013 Share Lobby Code (Audio)"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Frontend\n\n    User->>Frontend: click speaker icon\n    Frontend--\x3e>User: device speaks ingredient code"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"User clicks the speaker icon."}),"\n",(0,a.jsx)(n.li,{children:"Device reads each ingredient aloud for nearby friends."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case4--join-lobby-via-link",children:"Use Case\u202f4 \u2013 Join Lobby via Link"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Browser\n    participant Frontend\n    participant Backend\n\n    User->>Browser: follow lobby link\n    Browser->>Frontend: open home screen with code filled in\n    User->>Frontend: click Join Lobby\n    Frontend->>Backend: POST /lobby/join with code\n    Backend--\x3e>Frontend: returns player id\n    Frontend--\x3e>User: show lobby with player count"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Join screen opens with the code filled in."}),"\n",(0,a.jsx)(n.li,{children:"Frontend POSTS /lobby/join with the code."}),"\n",(0,a.jsx)(n.li,{children:"Backend returns the player ID."}),"\n",(0,a.jsx)(n.li,{children:"Frontend shows the lobby view."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case5--join-lobby-via-manual-code-entry",children:"Use Case\u202f5 \u2013 Join Lobby via Manual Code Entry"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Frontend\n    participant Backend\n\n    User->>Frontend: set carousel 1\n    User->>Frontend: set carousel 2\n    User->>Frontend: set carousel 3\n    User->>Frontend: click Join Lobby\n    Frontend->>Backend: POST /lobby/join with code\n    Backend--\x3e>Frontend: returns player id\n    Frontend--\x3e>User: show lobby view"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"User selects the three ingredients."}),"\n",(0,a.jsx)(n.li,{children:"Frontend POSTS /lobby/join with the code."}),"\n",(0,a.jsx)(n.li,{children:"Backend returns the player ID."}),"\n",(0,a.jsx)(n.li,{children:"Frontend shows the lobby view."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case6--start-game",children:"Use Case\u202f6 \u2013 Start Game"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User as User\n    participant Frontend\n    participant WS as WebSocket (server)\n\n    User->>Frontend: click Start Game\n    Frontend--\x3e>WS: sends start game message\n    WS--\x3e>Frontend: broadcasts start game message and role assignments\n    Frontend--\x3e>User: shows role assignment in a modal and displays station"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"A user in the lobby clicks start game."}),"\n",(0,a.jsx)(n.li,{children:"Frontend sends a start game message over WebSocket."}),"\n",(0,a.jsx)(n.li,{children:"Server broadcasts start game message and role assignments."}),"\n",(0,a.jsx)(n.li,{children:"Frontend shows the role modal and station."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case7--walk-through-joyride",children:"Use Case\u202f7 \u2013 Walk through Joyride"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Frontend\n\n    Frontend--\x3e>User: tutorial screen 1\n    loop next\n        User->>Frontend: click Next\n        Frontend--\x3e>User: highlight element + narration\n    end\n    User->>Frontend: click Done\n    Frontend--\x3e>User: overlay closes"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Frontend shows tutorial screens with narration."}),"\n",(0,a.jsx)(n.li,{children:"User steps through each screen."}),"\n",(0,a.jsx)(n.li,{children:"User clicks Done and gains control of the station."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case8--skip-joyride",children:"Use Case\u202f8 \u2013 Skip Joyride"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Frontend\n\n    Frontend--\x3e>User: tutorial screen 1\n    User->>Frontend: click Close\n    Frontend--\x3e>User: overlay removed"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Frontend shows the first tutorial screen."}),"\n",(0,a.jsx)(n.li,{children:"User closes it, and Frontend enables station controls."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case9--manager-receives-customer-order",children:"Use Case\u202f9 \u2013 Manager Receives Customer Order"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant WS as WebSocket (server)\n    participant Frontend\n    participant Manager as User\n\n    WS--\x3e>Frontend: sends new customer order\n    Frontend--\x3e>Manager: show thought bubble with items"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Server sends a new order message."}),"\n",(0,a.jsx)(n.li,{children:"Frontend shows the customer's order in a thought bubble."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case10--manager-relays-order-with-aac",children:"Use Case\u202f10 \u2013 Manager Relays Order with AAC"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Manager as User\n    participant Frontend\n\n    Manager->>Frontend: select burger folder and corresponding items on AAC board\n    Frontend--\x3e>Manager: device plays each item aloud\n    Manager->>Frontend: select side folder and corresponding items on AAC board\n    Frontend--\x3e>Manager: device plays each item aloud\n    Manager->>Frontend: select drink folder and corresponding items on AAC board\n    Frontend--\x3e>Manager: device plays each item aloud"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Manager taps the categories and the items needed in each one to play them aloud via the AAC Board."}),"\n",(0,a.jsx)(n.li,{children:"Device speaks each part of the order for employees to hear."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case11--employee-listens-to-order",children:"Use Case\u202f11 \u2013 Employee Listens to Order"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant ManagerDevice as Manager\u2019s Device\n    participant Employee as User\n\n    ManagerDevice--\x3e>Employee: speaks all order parts using AAC"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Employee hears the customer's order request from the manager."}),"\n",(0,a.jsx)(n.li,{children:"Employee notes the items for their station."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case12--employee-requests-order-repeat",children:"Use Case\u202f12 \u2013 Employee Requests Order Repeat"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Employee as User\n    participant Frontend\n\n    Employee->>Frontend: click Repeat Order\n    Frontend--\x3e>Employee: device asks manager to repeat the order aloud"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Employee presses the button to repeat the order."}),"\n",(0,a.jsx)(n.li,{children:"Employee\u2019s device asks the manager to repeat the order aloud."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case13--prepare-burger",children:"Use Case\u202f13 \u2013 Prepare Burger"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant BurgerCook as User\n    participant Frontend\n    participant WS as WebSocket (server)\n    participant ManagerClient\n\n    BurgerCook->>Frontend: stack ingredients (device names each) and undo any mistakes\n    BurgerCook->>Frontend: click Send Burger\n    Frontend--\x3e>WS: sends burger complete message\n    WS--\x3e>ManagerClient: adds burger to manager screen"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Burger cook selects and stacks ingredients, with the device speaking each ingredient name aloud - if they make any mistake they can press undo to take off the last ingredient placed."}),"\n",(0,a.jsx)(n.li,{children:"Burger cook clicks the Send Burger button."}),"\n",(0,a.jsx)(n.li,{children:"Frontend sends a burger message to the server."}),"\n",(0,a.jsx)(n.li,{children:"Server sends a message to the manager's client, adding the burger to their screen."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case14--prepare-sides",children:"Use Case\u202f14 \u2013 Prepare Sides"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant SidesCook as Employee\n    participant Frontend as Frontend\n    participant WS as WebSocket Server\n    participant ManagerView as Manager's Screen\n\n    SidesCook->>Frontend: recall requested side\n    SidesCook->>Frontend: click/drag ingredient to board\n    Frontend--\x3e>SidesCook: play ingredient name aloud\n    SidesCook->>Frontend: click/drag knife onto ingredient\n    Frontend--\x3e>SidesCook: show and play chopping animation/sound\n    SidesCook->>Frontend: drag chopped pieces to fryer\n    Frontend--\x3e>SidesCook: start countdown timer\n    Frontend--\x3e>SidesCook: display completed item when done\n    SidesCook->>Frontend: click send\n    Frontend--\x3e>SidesCook: play confirmation sound\n    Frontend--\x3e>WS: send side message\n    WS--\x3e>ManagerView: display side item"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"User does the cooking process on client side."}),"\n",(0,a.jsx)(n.li,{children:"User clicks the send button."}),"\n",(0,a.jsx)(n.li,{children:"Frontend sends the side message to the server."}),"\n",(0,a.jsx)(n.li,{children:"Server displays the side item on the manager's screen."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case15--prepare-drinks",children:"Use Case\u202f15 \u2013 Prepare Drinks"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant DrinksCook as Employee\n    participant Frontend as Frontend\n    participant WS as WebSocket Server\n    participant ManagerView as Manager's Screen\n\n    DrinksCook->>Frontend: recall drink size and color\n    DrinksCook->>Frontend: click size cup\n    DrinksCook->>Frontend: click matching color dispenser\n    DrinksCook->>Frontend: hold fill button\n    Frontend--\x3e>DrinksCook: show drink filling animation\n    DrinksCook->>Frontend: click send\n    Frontend--\x3e>DrinksCook: play confirmation sound\n    Frontend--\x3e>WS: send drink message\n    WS--\x3e>ManagerView: display drink item"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Drinks cook fills the correct drink."}),"\n",(0,a.jsx)(n.li,{children:"Frontend sends a drink message."}),"\n",(0,a.jsx)(n.li,{children:"Drink item appears on the manager\u2019s screen."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case16--manager-serves-order",children:"Use Case\u202f16 \u2013 Manager Serves Order"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Manager as User\n    participant Frontend\n    participant WS as WebSocket (server)\n    participant Backend\n    participant AllPlayers\n\n    Manager->>Frontend: verify order items on screen\n    Manager->>Frontend: click Serve Order\n    Frontend--\x3e>WS: sends order submitted message\n    WS->>Backend: forward submission\n    Backend--\x3e>WS: returns order score and earnings\n    WS--\x3e>AllPlayers: broadcast updated earnings"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Manager sees completed order items on the screen."}),"\n",(0,a.jsx)(n.li,{children:"Manager clicks Send Order."}),"\n",(0,a.jsx)(n.li,{children:"Backend scores the order and broadcasts new earnings."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case17--day-complete",children:"Use Case\u202f17 \u2013 Day Complete"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Server as WebSocket (server)\n    participant Frontend\n    participant User\n\n    Server->>Frontend: send day complete message\n    Frontend->>User: show Day Complete modal and summary\n    User->>Frontend: click Next Day\n    Frontend->>User: load next day scene"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Server sends a day complete message."}),"\n",(0,a.jsx)(n.li,{children:"Frontend shows the Day Complete modal and summary."}),"\n",(0,a.jsx)(n.li,{children:"User clicks Next Day."}),"\n",(0,a.jsx)(n.li,{children:"Frontend loads the next day\u2019s restaurant scene."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case18--role-assignment-for-next-day",children:"Use Case\u202f18 \u2013 Role Assignment for Next Day"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Server as WebSocket (server)\n    participant Frontend\n    participant User\n\n    Server->>Frontend: send role assignment message (if randomization on)\n    Frontend->>User: display new role card\n    User->>Frontend: click Confirm Role\n    Frontend->>User: load assigned station scene"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Server sends a role assignment message when roles change."}),"\n",(0,a.jsx)(n.li,{children:"Frontend displays the new role card."}),"\n",(0,a.jsx)(n.li,{children:"Frontend loads the station screen for that role."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-case19--game-complete",children:"Use Case\u202f19 \u2013 Game Complete"}),"\n",(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Server as WebSocket (server)\n    participant Frontend\n    participant User\n\n    Server->>Frontend: send game complete message\n    Frontend->>User: show Game Complete modal and final summary\n    User->>Frontend: click Back to Home\n    Frontend->>User: display landing screen"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Server sends a game complete message after the final day."}),"\n",(0,a.jsx)(n.li,{children:"Frontend shows the Game Complete modal and final summary."}),"\n",(0,a.jsx)(n.li,{children:"User clicks Back to Home."}),"\n",(0,a.jsx)(n.li,{children:"Frontend displays the landing screen."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);