"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3931],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(96540);const r={},a=s.createContext(r);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:n},e.children)}},45672:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"system-architecture/case-diagram","title":"Frontend Diagram","description":"The following is a diagram of the main pieces and components involved in making our frontend application work. The flow goes from left to right where the App or entry point is on the left and the pieces that compose it are to the right. The diagram is sideways to allow everything to fit on the documentation screen.","source":"@site/docs/system-architecture/case-diagram.md","sourceDirName":"system-architecture","slug":"/system-architecture/case-diagram","permalink":"/aac-go-fish/docs/system-architecture/case-diagram","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Spring/aac-go-fish/edit/main/documentation/docs/system-architecture/case-diagram.md","tags":[],"version":"current","lastUpdatedBy":"Andriy Luchko","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Version Control","permalink":"/aac-go-fish/docs/system-architecture/version-control"},"next":{"title":"API Specification","permalink":"/aac-go-fish/docs/category/api-specification"}}');var r=t(74848),a=t(28453);const o={},i="Frontend Diagram",c={},d=[];function l(e){const n={h1:"h1",header:"header",mermaid:"mermaid",p:"p",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"frontend-diagram",children:"Frontend Diagram"})}),"\n",(0,r.jsx)(n.p,{children:"The following is a diagram of the main pieces and components involved in making our frontend application work. The flow goes from left to right where the App or entry point is on the left and the pieces that compose it are to the right. The diagram is sideways to allow everything to fit on the documentation screen."}),"\n",(0,r.jsx)(n.mermaid,{value:"---\nconfig:\n  theme: default\n---\nclassDiagram\n\ndirection LR\n\nclass App {\n  +manages global state\n  +routes views by selected role\n  +render()\n}\nclass WebSocketContext {\n  +connects to backend\n  +manages message listeners\n  +provides send/receive methods\n}\nclass HomePage {\n  +lobby creation/join\n  +displays errors\n  +sets selected role\n}\nclass AACBoard {\n  +shows communication board\n  +tracks selected items\n}\nclass BurgerBuilder {\n  +handles burger assembly\n  +tracks ingredient state\n}\nclass DrinkBuilder {\n  +handles drink assembly\n  +selects size and type\n}\nclass SideBuilder {\n  +handles side assembly\n  +raw/chopped/cooked states\n}\nclass Score {\n  +displays points earned\n}\nclass StationStartModal {\n  +intro UI for role\n}\nclass DayCompleteModal {\n  +shows end-of-day stats\n  +play sound on show\n}\nclass GameCompleteModal {\n  +final score and return button\n  +play sound on show\n}\nclass ItemButton {\n  +represents AAC symbol\n  +onClick selects item\n}\nclass ItemGrid {\n  +renders grid of buttons\n}\nclass SelectedItemsDisplay {\n  +shows selected symbols\n}\nclass BurgerDisplay {\n  +renders current burger visual\n}\nclass BurgerStation {\n  +layout and interactive zone for burgers\n}\nclass DrinkDisplay {\n  +renders current drink visual\n}\nclass SideDisplay {\n  +renders current side item visual\n}\nclass MiniOrderDisplay {\n  +tracks and shows orders\n  +updated via WebSocket\n}\nclass IngredientScrollPicker {\n  +select ingredients via scrolling\n}\nclass Tutorial {\n  +step-by-step onboarding\n  +highlights UI elements\n}\nApp *-- WebSocketContext\nApp *-- HomePage\nApp *-- AACBoard\nApp *-- BurgerBuilder\nApp *-- DrinkBuilder\nApp *-- SideBuilder\nApp *-- Score\nApp *-- StationStartModal\nApp *-- DayCompleteModal\nApp *-- GameCompleteModal\n\nAACBoard *-- ItemButton\nAACBoard *-- ItemGrid\nAACBoard *-- SelectedItemsDisplay\n\nBurgerBuilder *-- BurgerDisplay\nBurgerBuilder *-- BurgerStation\nBurgerBuilder o-- IngredientScrollPicker\n\nDrinkBuilder *-- DrinkDisplay\nDrinkBuilder o-- IngredientScrollPicker\n\nSideBuilder *-- SideDisplay\nSideBuilder o-- IngredientScrollPicker\n"})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);