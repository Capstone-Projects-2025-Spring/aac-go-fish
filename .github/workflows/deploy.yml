# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy Docs

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  coverage:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ github.head_ref }}

      - name: Install uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182  # v5.4.1
        with:
          version: "0.5.4"

      - name: Install Python
        run: uv python install

      - name: Install project
        run: uv sync

      - name: Cache pre-commit hooks
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # 4.2.3
        env:
          cache-name: cache-pre-commit
        with:
          # https://pre-commit.com/#managing-ci-caches
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run pre-commit
        run: uv run pre-commit run --all-files

      - name: Run pytest with coverage.py
        run: uv run coverage run -m pytest

      - name: Create coverage report
        run: uv run coverage html

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: coverage
          path: htmlcov
          overwrite: true

  wss-schema:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ github.head_ref }}

      - name: Install uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182  # v5.4.1
        with:
          version: "0.5.4"

      - name: Install Python
        run: uv python install

      - name: Install dependencies
        run: uv sync

      - name: Output json schema
        run: uv run backend/models.py > wss_schema.json

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: wss-schema
          path: wss_schema.json
          overwrite: true
  deploy:
    needs: ["coverage", "wss-schema"]
    runs-on: ubuntu-24.04
    env:
      GIT_USER: ${{secrets.USER}}
      GIT_PASS: ${{secrets.TOKEN}}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Download wss schema
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e  # v4.2.1
        with:
          name: wss-schema
          path: documentation/static/schemas

      - name: Download coverage report
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e  # v4.2.1
        with:
          name: coverage
          path: documentation/static/htmlcov

      - name: Install
        run: cd documentation && yarn install

      - name: Deploy
        run: |
          export ORG_NAME=$(echo ${GITHUB_REPOSITORY%/*})
          export PROJECT_NAME=$(echo ${GITHUB_REPOSITORY#*/})
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          cd documentation && yarn deploy
