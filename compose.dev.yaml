---
name: order-up

services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
      additional_contexts:
        metadata: .
    environment:
      ENV: demo
      LOG_LEVEL: DEBUG
      FRONTEND_URL: localhost:3000
      JSON_LOGS: true
    command: ["fastapi", "run", "./hello.py", "--root-path", "/api"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        REACT_APP_BACKEND_DOMAIN: localhost:3000/api
      additional_contexts:
        metadata: .
    ports:
      - "127.0.0.1:3001:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  nginx:
    image: nginx:1.27.4-alpine@sha256:4ff102c5d78d254a6f0da062b3cf39eaf07f01eec0927fd21e219d0af8bc0591
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
      - grafana

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - prometheus-data:/prometheus
    command:
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml

  loki:
    image: grafana/loki:3.2.0
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  alloy:
    image: grafana/alloy:latest
    ports:
      - "127.0.0.1:12345:12345"
      - "127.0.0.1:4317:4317"
      - "127.0.0.1:4318:4318"
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy

  grafana:
    image: grafana/grafana:11.0.0
    environment:
     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
     - GF_AUTH_ANONYMOUS_ENABLED=true
     - GF_AUTH_BASIC_ENABLED=false
     - GF_SERVER_ROOT_URL=http://localhost:3000/grafana
     - GF_SERVER_PROTOCOL=http
    ports:
      - "127.0.0.1:4000:3000"
    entrypoint:
     - sh
     - -euc
     - |
       mkdir -p /etc/grafana/provisioning/datasources
       cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
       apiVersion: 1
       datasources:
       - name: Loki
         type: loki
         access: proxy
         orgId: 1
         url: http://loki:3100
         basicAuth: false
         isDefault: false
         version: 1
         editable: false
       - name: Prometheus
         type: prometheus
         orgId: 1
         url: http://prometheus:9090
         basicAuth: false
         isDefault: true
         version: 1
         editable: false
       EOF
       /run.sh

volumes:
  prometheus-data:
